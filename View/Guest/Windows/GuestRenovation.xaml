<Window x:Class="BookingApp.View.Guest.Windows.GuestRenovation"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BookingApp.View.Guest.Windows"
        mc:Ignorable="d"
        Title="GuestRenovation" Height="600" Width="800" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#f4cc2e"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#f4cc2e"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#EFDE9F"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#EFDE9F"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#f4cc2e"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#f4cc2e"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsFocused"  Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Focus">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#56736F"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#56736F"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#74877A"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#74877A"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#74877A"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#74877A"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsFocused"  Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#DDDDDD">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="0.5*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="0.8*"/>
            <RowDefinition Height="0.4*"/>
            <RowDefinition Height="0.4*"/>
            <RowDefinition Height="0.4*"/>
            <RowDefinition Height="0.4*"/>
            <RowDefinition Height="0.4*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>
        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" x:Name="AccommodationInformation" FontSize="25" Content="Accommodation name: " HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5 0 0 0"/>
        <Label Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" FontSize="20" Content="Add comment:*" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="5 0 0 0"/>
        <TextBox Background="WhiteSmoke" x:Name="CommentTextBox" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Margin="10"/>
        <Label Grid.Row="3" Grid.Column="0" FontSize="20" Content="Choose a level:*" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5 0 0 0"/>
        <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="160 0 0 0" VerticalAlignment="Center">
            <RadioButton Background="WhiteSmoke" x:Name="Level1" Content="1" FontSize="20" GroupName="LevelsRadioButton" 
                  Checked="LevelChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Level2" Content="2" FontSize="20" GroupName="LevelsRadioButton" 
                  Checked="LevelChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Level3" Content="3" FontSize="20" GroupName="LevelsRadioButton" 
                  Checked="LevelChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Level4" Content="4" FontSize="20" GroupName="LevelsRadioButton" 
                  Checked="LevelChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Level5" Content="5" FontSize="20" GroupName="LevelsRadioButton" 
                  Checked="LevelChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
        </StackPanel>
        <Label Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" FontSize="12" Content="*Level 1 - Minor improvements are desirable but not essential." HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5 0 0 0"/>
        <Label Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" FontSize="12" Content=" Level 2 - Minor issues that, if addressed, would improve the accommodation." HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5 0 0 0"/>
        <Label Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="3" FontSize="12" Content=" Level 3 - Several bothersome issues requiring renovation." HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5 0 0 0"/>
        <Label Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" FontSize="12" Content=" Level 4 - Significant issues necessitating renovation." HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5 0 0 0"/>
        <Label Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="3" FontSize="12" Content=" Level 5 - Accommodation is in poor condition and not worth renting without renovation." HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5 0 0 0"/>
        <Button Style="{DynamicResource ButtonStyle}" Grid.Row="9" Grid.Column="1" Width="200" Height="50" Content="Send" FontSize="25" Command="{Binding SendButton}"/>
    </Grid>
    
</Window>
