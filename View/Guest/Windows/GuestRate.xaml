<Window x:Class="BookingApp.View.Guest.Windows.GuestRate"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BookingApp.View.Guest.Windows"
        xmlns:local1="clr-namespace:BookingApp.Domain.Model.Converters"
        mc:Ignorable="d"
        Title="GuestRate" Height="450" Width="800" ResizeMode="NoResize" WindowStartupLocation="CenterScreen" >
    <Window.Resources>
        <local1:ImagePathToImage x:Key="ImagePathToImage"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#f4cc2e"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#f4cc2e"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#ffdd55"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#ffdd55"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#ffdd55"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#ffdd55"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsFocused"  Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Focus">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#56736F"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#56736F"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#74877A"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#74877A"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#74877A"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#74877A"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsFocused"  Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#DDDDDD">
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="0.2*"/>

            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="0.2*"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="AccommodationName" Grid.Row="0" Grid.Column="0" FontSize="20" Content="Accommodation Name: " HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <Label x:Name="Location" Grid.Row="0" Grid.Column="2" FontSize="20" Content="Location: " HorizontalAlignment="Left" VerticalAlignment="Center" Margin="11 0 0 0"/>
        <Label Grid.Row="1" Grid.Column="0" Height="35" Width="110" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Left">Clealiness:*</Label>
        <!--<ComboBox x:Name="CleanlinessComboBox" Grid.Row="1" Grid.Column="0" Width="200" Height="35" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Right">
            <ComboBoxItem Content="1"></ComboBoxItem>
            <ComboBoxItem Content="2"></ComboBoxItem>
            <ComboBoxItem Content="3"></ComboBoxItem>
            <ComboBoxItem Content="4"></ComboBoxItem>
            <ComboBoxItem Content="5"></ComboBoxItem>
        </ComboBox>-->
        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="160 0 0 0" VerticalAlignment="Center">
            <RadioButton Background="WhiteSmoke" x:Name="Cleanliness1" Content="1" FontSize="20" GroupName="CleanlinessRadioButton" 
          Checked="CleanLinessChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Cleanliness2" Content="2" FontSize="20" GroupName="CleanlinessRadioButton" 
          Checked="CleanLinessChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Cleanliness3" Content="3" FontSize="20" GroupName="CleanlinessRadioButton" 
          Checked="CleanLinessChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Cleanliness4" Content="4" FontSize="20" GroupName="CleanlinessRadioButton" 
          Checked="CleanLinessChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Cleanliness5" Content="5" FontSize="20" GroupName="CleanlinessRadioButton" 
          Checked="CleanLinessChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
        </StackPanel>
        <Label Grid.Row="2" Grid.Column="0" Height="36" Width="170" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Left">Owner integrity:*</Label>
        <!--<ComboBox x:Name="IntegrityComboBox" Grid.Row="2" Grid.Column="0" Width="200" Height="35" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Right">
            <ComboBoxItem Content="1"></ComboBoxItem>
            <ComboBoxItem Content="2"></ComboBoxItem>
            <ComboBoxItem Content="3"></ComboBoxItem>
            <ComboBoxItem Content="4"></ComboBoxItem>
            <ComboBoxItem Content="5"></ComboBoxItem>
        </ComboBox>-->
        <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal" Margin="160 0 0 0" VerticalAlignment="Center">
            <RadioButton Background="WhiteSmoke" x:Name="Integrity1" Content="1" FontSize="20" GroupName="IntegrityRadioButton" 
        Checked="IntegrityChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Integrity2" Content="2" FontSize="20" GroupName="IntegrityRadioButton" 
        Checked="IntegrityChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Integrity3" Content="3" FontSize="20" GroupName="IntegrityRadioButton" 
        Checked="IntegrityChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Integrity4" Content="4" FontSize="20" GroupName="IntegrityRadioButton" 
        Checked="IntegrityChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
            <RadioButton Background="WhiteSmoke" x:Name="Integrity5" Content="5" FontSize="20" GroupName="IntegrityRadioButton" 
        Checked="IntegrityChecked" VerticalContentAlignment="Center" Margin="0 0 10 0"/>
        </StackPanel>
        <Button Style="{DynamicResource ButtonStyle1}" Grid.Column="2" Grid.Row="2" Grid.RowSpan="4" BorderThickness="0" Width="20" Height="20" Background="Transparent" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding PreviousImageCommand}">
            <Button.Content>
                <Image Source="../../../Resources/Images/Guest/arrowleft.png"></Image>
            </Button.Content>
        </Button>
        <Button Style="{DynamicResource ButtonStyle1}" Grid.Column="2" Grid.Row="2" Grid.RowSpan="4" BorderThickness="0" Width="20" Height="20" Background="Transparent" HorizontalAlignment="Right" VerticalAlignment="Center" Command="{Binding NextImageCommand}">
            <Button.Content>
                <Image Source="../../../Resources/Images/Guest/arrowright.png"></Image>
            </Button.Content>
        </Button>
        <Button Style="{DynamicResource ButtonStyle}" Grid.Row="1" Grid.Column="2" FontSize="20" Height="35" Width="320" VerticalAlignment="Center" HorizontalAlignment="Center" Command="{Binding attachImage}">
            <StackPanel Orientation="Horizontal">
                <Label Content="Attach" HorizontalAlignment="Center" VerticalAlignment="Center" Padding="0 0 0 0"></Label>
                <Image Source="../../../Resources/Images/Guest/attachment.png" Height="30" Width="30"></Image>
            </StackPanel>
        </Button>
        <Border Grid.Column="2" Grid.Row="2" Grid.RowSpan="4" Margin="5" Height="200" Width="320" BorderThickness="2" BorderBrush="Black">
            <Grid>
            <Image Source="{Binding CurrentImagePath}" Height="200" Width="320"/>
            <Button  Grid.Column="1" BorderThickness="0" Width="20" Height="20" Background="Transparent" 
            HorizontalAlignment="Right" VerticalAlignment="Top" Command="{Binding DeleteImageCommand}">
                <Button.Content>
                    <Image Source="../../../Resources/Images/delete.png"></Image>
                </Button.Content>
            </Button>
            </Grid>
        </Border>
        <Label Grid.Row="3" Grid.Column="0" Height="35" Width="170" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center">Add comment*</Label>
        <TextBox Background="WhiteSmoke" x:Name="CommentTextBox" Grid.Row="4" Grid.Column="0" Grid.RowSpan="2" Margin="5 0 0 0" MaxLength="400" TextWrapping="Wrap" ></TextBox>
        <Button Style="{DynamicResource ButtonStyle}" x:Name="RenovationButton" Grid.Row="6" Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Width="200" Height="50" FontSize="20" Content="Renovation" Click="RenovationClick"></Button>
        <Button Style="{DynamicResource ButtonStyle}" Grid.Row="6" Grid.Column="2" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Width="200" Height="50" FontSize="20" Content="Rate It" Command="{Binding rateIt}"></Button>
    </Grid>
</Window>
