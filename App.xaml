<Application x:Class="BookingApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BookingApp"
             xmlns:properties="clr-namespace:BookingApp.Properties"
             Startup="Application_Startup">
    <Application.Resources>
        <FontFamily x:Key="OwnerFontFamily">Trebuchet MS</FontFamily>
        <FontFamily x:Key="asas">Trebuchet MS</FontFamily>
        <Color x:Key="OwnerBackgroundColor">#007ACC</Color>
        <Color x:Key="OwnerTextColor1">#3e434c</Color>
        <Color x:Key="OwnerImageColor1">#337ae1</Color>
        <Color x:Key="OwnerImageColor2">#45c3ef</Color>
        <Color x:Key="OwnerLightBackgroundColor">#ffffff</Color>
        <Color x:Key="OwnerDarkBackgroundColor">#11192c</Color>
        <Color x:Key="OwnerTabLightColor">#e3e3e3</Color>
        <Color x:Key="OwnerTabHoverLightColor">#8fb1ff</Color>
        <Color x:Key="OwnerTabDarkColor">#1f2a42</Color>
        <Color x:Key="OwnerTabHoverDarkColor">#2a354c</Color>
        <Color x:Key="OwnerTabPressedLightColor">#6d7585</Color>
        <Color x:Key="OwnerTabPressedDarkColor">#171a25</Color>
        <Color x:Key="OwnerButtonColor">#2a5bc9</Color>
        <Color x:Key="OwnerButtonPressedColor">#2955bc</Color>
        <Color x:Key="OwnerButtonDisabledColor">#8495ba</Color>
        <Color x:Key="OwnerTabPressedColor">#4578eb</Color>
        <Color x:Key="OwnerButtonDisabledForegroundColor">#454545</Color>
        
        <SolidColorBrush x:Key="OwnerBackgroundColorBrush" Color="{StaticResource OwnerBackgroundColor}"/>
        <SolidColorBrush x:Key="OwnerTextColor1Brush" Color="{StaticResource OwnerTextColor1}"/>
        <SolidColorBrush x:Key="OwnerImageColor1Brush" Color="{StaticResource OwnerImageColor1}"/>
        <SolidColorBrush x:Key="OwnerImageColor2Brush" Color="{StaticResource OwnerImageColor2}"/>
        <SolidColorBrush x:Key="OwnerTabLightColorBrush" Color="{StaticResource OwnerTabLightColor}"/>
        <SolidColorBrush x:Key="OwnerTabHoverLightColorBrush" Color="{StaticResource OwnerTabHoverLightColor}"/>
        <SolidColorBrush x:Key="OwnerLightBackgroundColorBrush" Color="{StaticResource OwnerLightBackgroundColor}"/>
        <SolidColorBrush x:Key="OwnerDarkBackgroundColorBrush" Color="{StaticResource OwnerDarkBackgroundColor}"/>
        <SolidColorBrush x:Key="OwnerTabDarkColorBrush" Color="{StaticResource OwnerTabDarkColor}"/>
        <SolidColorBrush x:Key="OwnerTabHoverDarkColorBrush" Color="{StaticResource OwnerTabHoverDarkColor}"/>
        <SolidColorBrush x:Key="OwnerTabPressedLightColorBrush" Color="{StaticResource OwnerTabPressedLightColor}"/>
        <SolidColorBrush x:Key="OwnerTabPressedDarkColorBrush" Color="{StaticResource OwnerTabPressedDarkColor}"/>
        <SolidColorBrush x:Key="OwnerButtonPressedColorBrush" Color="{StaticResource OwnerButtonPressedColor}"/>
        <SolidColorBrush x:Key="OwnerTabPressedColorBrush" Color="{StaticResource OwnerTabPressedColor}"/>
        <SolidColorBrush x:Key="OwnerButtonDisabledColorBrush" Color="{StaticResource OwnerButtonDisabledColor}"/>
        <SolidColorBrush x:Key="OwnerButtonDisabledForegroundColorBrush" Color="{StaticResource OwnerButtonDisabledForegroundColor}"/>

        <Color x:Key="BorderLightBackgroundColor">WhiteSmoke</Color>
        <!-- WhiteSmoke -->
        <Color x:Key="BorderDarkBackgroundColor">#1f2a42</Color>
        <!-- Tamna pozadina -->
        <SolidColorBrush x:Key="BorderBackgroundBrush" Color="{StaticResource BorderLightBackgroundColor}"/>

        <Color x:Key="BackgroundColor">#579BB1</Color>
        <Color x:Key="ButtonPressedColor">#154c79</Color>
        <Color x:Key="BorderColor">#000033</Color>
        <Color x:Key="TextColor">#403022</Color>
        <Color x:Key="TabColor">#ebd3bc</Color>
        <SolidColorBrush x:Key="BackgroundColorBrush" Color="{StaticResource BackgroundColor}"/>
        <SolidColorBrush x:Key="BorderColorBrush" Color="{StaticResource BorderColor}"/>
        <SolidColorBrush x:Key="ButtonPressedColorBrush" Color="{StaticResource ButtonPressedColor}"/>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#579BB1"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#000033"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{StaticResource OwnerTabHoverLightColor}"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="{StaticResource OwnerButtonPressedColor}"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="{StaticResource OwnerButtonDisabledColor}"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{StaticResource OwnerButtonDisabledForegroundColor}"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <BitmapImage x:Key="OwnerImage" UriSource="Resources/Images/Owner/verified-user.png"/>
        <BitmapImage x:Key="GuestImage" UriSource="Resources/Images/Owner/forum-user.png"/>
        <BitmapImage x:Key="OwnerWhiteImage" UriSource="Resources/Images/Owner/user-verificationWhite.png"/>
        <BitmapImage x:Key="GuestWhiteImage" UriSource="Resources/Images/Owner/forumUserWhite.png"/>
        <BitmapImage x:Key="StarImage" UriSource="Resources/Images/Owner/star.png"/>
        <BitmapImage x:Key="StarWhiteImage" UriSource="Resources/Images/Owner/starWhite.png"/>
        <BitmapImage x:Key="KeyImage" UriSource="Resources/Images/Owner/owner.png"/>
        <BitmapImage x:Key="KeyWhiteImage" UriSource="Resources/Images/Owner/keyWhite.png"/>
        <Style x:Key="ForumOwnerImage" TargetType="Image">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Source" Value="{StaticResource OwnerImage}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Source" Value="{StaticResource OwnerWhiteImage}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ForumGuestImage" TargetType="Image">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Source" Value="{StaticResource GuestImage}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Source" Value="{StaticResource GuestWhiteImage}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ForumSpecialGuestStarImage" TargetType="Image">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Source" Value="{StaticResource StarImage}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Source" Value="{StaticResource StarWhiteImage}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ForumOwnerKeyImage" TargetType="Image">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Source" Value="{StaticResource KeyImage}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Source" Value="{StaticResource KeyWhiteImage}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerTextBox" TargetType="TextBox">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
        </Style>
        <Style x:Key="OwnerComboBox" TargetType="ComboBox">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
        </Style>
        <Style x:Key="OwnerItemsControl"  TargetType="ItemsControl">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
        </Style>

        <Style x:Key="OwnerDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Background" Value="{StaticResource OwnerTabPressedColorBrush}"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Background" Value="{StaticResource OwnerTabPressedColorBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OwnerDataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="AliceBlue"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                    <Setter Property="Background" Value="{StaticResource OwnerTabDarkColorBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerDataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            
        </Style>
        <Style x:Key="OwnerDataGrid" TargetType="DataGrid">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OwnerButtonPressedColorBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Setter Property="RowStyle" Value="{StaticResource OwnerDataGridRowStyle}"/>
            <Setter Property="ColumnHeaderStyle" Value="{StaticResource OwnerDataGridColumnHeaderStyle}"/>
            <Setter Property="CellStyle" Value="{StaticResource OwnerDataGridCellStyle}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="LightGray"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                    <Setter Property="Background" Value="#151D30"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerRadioButton" TargetType="RadioButton">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerLabel" TargetType="Label">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="WhiteSmoke"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerButton" TargetType="Button">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerTextBlock" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerDataGridTextBlock" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Path=IsSelected}" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource OwnerTabPressedDarkColorBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerRun" TargetType="Run">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="{StaticResource OwnerTabPressedColorBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="30" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerButtonStyle20" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="{StaticResource OwnerTabPressedColorBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="20" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="OwnerButtonStyle15" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="{StaticResource OwnerTabPressedColorBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="15" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="Foreground" Value="Black"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="Foreground" Value="White"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OwnerTabButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Light">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="{StaticResource OwnerTabLightColorBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource OwnerTextColor1Brush}"/>
                    <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource OwnerTabLightColorBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource OwnerTabHoverLightColorBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource OwnerTextColor1Brush}"/>
                                        <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=ColorMode}" Value="Dark">
                    <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                    <Setter Property="Foreground" Value="LightGray"/>
                    <Setter Property="Background" Value="{StaticResource OwnerTabDarkColorBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource OwnerTabPressedDarkColorBrush}"/>
                    <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource OwnerTabPressedDarkColorBrush}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource OwnerTabHoverDarkColorBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource OwnerTabPressedColorBrush}"/>
                                        <Setter Property="FontFamily" Value="{StaticResource OwnerFontFamily}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <SolidColorBrush x:Key="DirtColor" Color="#1c160e"/>
        <SolidColorBrush x:Key="LightDirtColor" Color="#ff9142"/>
        <SolidColorBrush x:Key="GuideTextboxBackground" Color="#fcde97"/>
        <SolidColorBrush x:Key="GrassDark" Color="#166300"/>
        <SolidColorBrush x:Key="GrassLight" Color="#24a800"/>
        <SolidColorBrush x:Key="NBackGroundColor" Color="#383838"/>
        <SolidColorBrush x:Key="NBackGroundColorLight" Color="#545454"/>
        <SolidColorBrush x:Key="NButtonColor1" Color="#fec04a"/>
        <SolidColorBrush x:Key="NButtonColor2" Color="#edff4e"/>
        <SolidColorBrush x:Key="NButtonColor3" Color="#3e3e3e"/>
        <SolidColorBrush x:Key="NButtonColor3Text" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="NButtonColor4" Color="#854efe"/>
        <SolidColorBrush x:Key="NTextboxBackground" Color="#34333f"/>
    </Application.Resources>
</Application>
